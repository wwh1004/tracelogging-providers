ProviderNames:
	Microsoft.Windows.AppModel.Clipboard



**** Events *****
UnregisterOSTaskCompletionActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

RegisterOSTaskCompletionActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

SubscribedToServicesActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

FGCheckActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

FlushActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

UpdateEdpDataPackageLockStateActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

GetContentInternalActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

GetContentActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClipboardTracing(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOL32 isEmpty
	);

SetContentActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

CreateClipboardServer(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

TaskCompletionDetails(
	UINT32 processId,
	UINT64 PartA_PrivTags
	);

TaskCompletionRevoked(
	UNICODESTRING clipboardOwner,
	UINT64 PartA_PrivTags
	);

FGCheckDetails(
	UINT32 callerProcessId,
	UNICODESTRING callerAppId,
	INT32 result,
	UINT64 PartA_PrivTags
	);

UpdateMDMPolicy(
	INT32 isCopyPasteAllowed,
	UINT64 PartA_PrivTags
	);

CloneDelayRenderedFormatsStarted(
	UNICODESTRING callerAppId,
	UNICODESTRING sourcePackageFullName,
	UINT64 PartA_PrivTags
	);

ValidateAppId(
	UNICODESTRING ownerAppId,
	UNICODESTRING callerAppId,
	UINT64 PartA_PrivTags
	);

ReadPolicyEvaluation(
	UNICODESTRING enterpriseId,
	UNICODESTRING sourceAppId,
	UNICODESTRING callingAppId,
	UINT32 callingProcessId,
	INT32 isAllowedToRead,
	UINT64 PartA_PrivTags
	);

GetContentDetails(
	UNICODESTRING callingAppId,
	UNICODESTRING ownerAppId,
	UINT64 PartA_PrivTags
	);

CheckMDMPolicy(
	INT32 isCopyPasteAllowed,
	UINT64 PartA_PrivTags
	);

SetContentRequestDetails(
	UNICODESTRING ownerAppId,
	UINT64 PartA_PrivTags
	);

DataPackageCloneStarted(
	UNICODESTRING callerAppId,
	UNICODESTRING sourcePackageFullName,
	UINT64 userConTextToken,
	UINT64 PartA_PrivTags
	);

UnregisterOSTaskCompletionActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

UnregisterOSTaskCompletionActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

RegisterOSTaskCompletionActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

RegisterOSTaskCompletionActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

SourceProcessCrashed(
	UINT64 PartA_PrivTags
	);

SubscribedToServicesActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

SubscribedToServicesActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FGCheckActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FGCheckActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

CloneDelayRenderedFormatsFinished(
	UINT64 PartA_PrivTags
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FlushActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FlushActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

UpdateEdpDataPackageLockStateActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

UpdateEdpDataPackageLockStateActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetContentInternalActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetContentInternalActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetContentActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GetContentActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ContentChangedWNFPublished(
	UINT64 PartA_PrivTags
	);

DataPackageCloneFinished(
	UINT64 PartA_PrivTags
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

SetContentInternalActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

SetContentInternalActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

SetContentActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

SetContentActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

CreateClipboardServer(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

CreateClipboardServer(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

FallbackError(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MUXCheckActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

MUXCheckActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MUXCheckActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

